// -----------------------------------------------------------------------------
// Copyright 2020 Patrick NÃ¤f (herzbube@herzbube.ch)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// -----------------------------------------------------------------------------

#pragma once

// C++ Standard Library includes
#include <memory>
#include <vector>

namespace LibSgfcPlusPlus
{
  class ISgfcMessage;

  /// @brief The SgfcMessageParser class parses the text of messages that were
  /// generated by SGFC.
  ///
  /// @ingroup internals
  /// @ingroup sgfc-message
  class SgfcMessageParser
  {
  public:
    /// @brief Creates a new ISgfcMessage object by parsing the text of a
    /// message @a rawMessageText that was generated by SGFC.
    ///
    /// Consecutive whitespace characters in @a rawMessageText are condensed
    /// into a single space character.
    static std::shared_ptr<ISgfcMessage> CreateSgfcMessage(const std::string& rawMessageText);

  private:
    static std::vector<std::string> TokenizeRawMessageText(const std::string& rawMessageText);
    static int GetLineOrColumnNumberFromToken(const std::string& token, const std::string& prefixToStrip);
    static int GetMessageIDFromToken(const std::string& token);
  };
}
