// -----------------------------------------------------------------------------
// Copyright 2020 Patrick NÃ¤f (herzbube@herzbube.ch)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// -----------------------------------------------------------------------------

#pragma once

// Project includes
#include "../../../include/ISgfcMessage.h"

namespace LibSgfcPlusPlus
{
  /// @brief The SgfcMessage class provides an implementation of the
  /// ISgfcMessage interface. See the interface header file for
  /// documentation.
  ///
  /// @ingroup internals
  /// @ingroup sgfc-message
  class SgfcMessage : public ISgfcMessage
  {
  public:
    /// @brief Initializes a newly constructed SgfcMessage object with the
    /// supplied parameter values. The message ID must be zero or a positive
    /// number.
    ///
    /// This constructor is intended to be used for messages that are
    /// generated by SGFC.
    ///
    /// @exception std::invalid_argument Is thrown if @a messageID is not zero
    /// or a positive number. Is thrown if the message type is
    /// SgfcMessageType::FatalError and @e isCriticalMessage is true.
    ///
    /// @note The exceptions enforce the details specified in the ISgfcMessage
    /// interface documentation.
    SgfcMessage(
      int messageID,
      SgfcMessageType messageType,
      int lineNumber,
      int columnNumber,
      bool isCriticalMessage,
      int libraryErrorNumber,
      const std::string& messageText,
      const std::string& formattedMessageText);

    /// @brief Initializes a newly constructed SgfcMessage object with the
    /// supplied parameter values. The SgfcMessage has message type
    /// SgfcMessageType::FatalError. The message ID must be a negative number.
    ///
    /// This constructor is intended to be used for messages that are
    /// generated by libsgfc++.
    ///
    /// @exception std::invalid_argument Is thrown if @a messageID is not a
    /// negative number
    SgfcMessage(
      int messageID,
      const std::string& messageText);

    /// @brief Destroys and cleans up the ISgfcMessage object.
    virtual ~SgfcMessage();
  
    virtual int GetMessageID() const override;

    virtual SgfcMessageType GetMessageType() const override;

    virtual int GetLineNumber() const override;
    virtual int GetColumnNumber() const override;

    virtual bool IsCriticalMessage() const override;

    virtual int GetLibraryErrorNumber() const override;

    virtual std::string GetMessageText() const override;
    virtual std::string GetFormattedMessageText() const override;

  private:
    int messageID;
    SgfcMessageType messageType;
    int lineNumber;
    int columnNumber;
    bool isCriticalMessage;
    int libraryErrorNumber;
    std::string messageText;
    std::string formattedMessageText;
  };
}
