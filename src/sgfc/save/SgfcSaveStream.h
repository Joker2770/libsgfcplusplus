// -----------------------------------------------------------------------------
// Copyright 2020 Patrick NÃ¤f (herzbube@herzbube.ch)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// -----------------------------------------------------------------------------

#pragma once

// C++ Standard Library includes
#include <memory>
#include <vector>

// Forward declarations
struct SGFInfo;

namespace LibSgfcPlusPlus
{
  // Forward declarations
  class SgfcSgfContent;

  /// @brief The SgfcSaveStream class captures the stream of save data that
  /// is generated by SGF.
  ///
  /// @ingroup internals
  /// @ingroup sgfc-backend
  ///
  /// SgfcSaveStream starts to capture the stream of save data
  /// immediately upon construction. Capturing stops only when the
  /// SgfcSaveStream object is destroyed. A client can access the save data
  /// captured so far during the lifetime of the SgfcSaveStream object by
  /// invoking its GetSgfContents() method.
  ///
  /// Only one SgfcSaveStream can be active at any given time.
  class SgfcSaveStream
  {
  public:
    /// @brief Initializes a newly constructed SgfcSaveStream object.
    /// The object immediately starts capturing the SGFC save data stream.
    ///
    /// To achieve its goal, SgfcSaveStream reconfigures some hooks/callbacks
    /// that are currently set up in @a sgfInfo. It resets these hooks/callbacks
    /// upon destruction. To be able to do this, SgfcSaveStream stores a
    /// reference to @a sgfInfo.
    ///
    /// @exception std::invalid_argument Is thrown if @a is NULL.
    ///
    /// @exception std::logic_error Is thrown if another SgfcSaveStream
    /// object already exists.
    SgfcSaveStream(SGFInfo* sgfInfo);

    /// @brief Destroys and cleans up the SgfcSaveStream object. This resets
    /// the hooks/callbacks that were reconfigured by the constructor to their
    /// original values.
    virtual ~SgfcSaveStream();

    /// @brief Returns a collection of save data captured so far by the
    /// SgfcSaveStream object. The save data objects appear in the collection
    /// in the order in which they are generated by SGFC. The collection is
    /// empty if SGFC has not generated any save data.
    std::vector<std::shared_ptr<SgfcSgfContent>> GetSgfContents() const;

  private:
    SGFInfo* sgfInfo;
  };
}
