#pragma once

// Project includes
#include "../include/SgfcMessageType.h"

// C++ Standard Library includes
#include <string>
#include <regex>

namespace LibSgfcPlusPlus
{
  /// @brief The SgfcPrivateConstants class is a container class for
  /// library-internal constants.
  class SgfcPrivateConstants
  {
  public:
    /// @name General string constants
    //@{
    static const std::string EmptyString;
    static const std::string SpaceCharacter;
    static const char NewlineCharacter;
    static const char CarriageReturnCharacter;
    static const std::string IndentationWhitespace;
    /// @brief The line ending used by SGFC. Currently this is used by SGFC only
    /// when it writes SGF content. Currently SGFC does not use this when it
    /// writes messages with PrintError() - in that case it always uses
    /// SgfcPrivateConstants::NewlineCharacter.
    static const std::string EndOfLineStringUsedBySgfc;
    /// This constant contains a platform-specific string that is used as the
    /// directory separator in filesystem paths.
    static const std::string DirectorySeparator;
    //@}

    /// @name String constants defined by the SGF standard to structure the file format
    //@{
    static const std::string GameTreeBeginToken;
    static const std::string GameTreeEndToken;
    static const std::string NodeBeginToken;
    static const std::string PropertyValueBeginToken;
    static const std::string PropertyValueEndToken;
    static const std::string ComposedValueSeparatorToken;
    static const std::string EscapeCharacterToken;
    static const std::string EscapedPropertyValueEndToken;
    static const std::string EscapedComposedValueSeparatorToken;
    static const std::string EscapedEscapeCharacterToken;
    //@}

    /// @name Regular expression constants
    //@{
    /// @brief A regex pattern that matches the line endings on all platforms.
    static const std::string LineEndingsPattern;
    static const std::regex EscapedPropertyValueEndTokenRegex;
    static const std::regex EscapedComposedValueSeparatorTokenRegex;
    static const std::regex EscapedEscapeCharacterRegex;
    static const std::regex EscapedLineEndingsRegex;
    static const std::regex UnescapedPropertyValueEndTokenRegex;
    static const std::regex UnescapedComposedValueSeparatorTokenRegex;
    static const std::regex UnescapedEscapeCharacterRegex;
    static const std::regex UnescapedLineEndingsRegex;
    //@}

    /// @name Constants for strings that can appear in messages generated by SGFC
    //@{
    static const std::string LineToken;
    static const std::string ColumnToken;
    static const std::string DashToken;
    static const std::string WarningToken;
    static const std::string ErrorUpperCaseToken;
    static const std::string FatalToken;
    static const std::string ErrorLowerCaseToken;
    static const std::string CriticalToken;
    //@}

    /// @name SGFC command line option string constants
    //@{
    static const std::string ShortOptionPrefix;
    static const std::string LongOptionPrefix;
    static const std::string ShortHelpOption;
    static const std::string LongHelpOption;
    static const std::string VersionOption;
    static const std::string InteractiveModeOption;
    static const std::string WriteFileEvenIfCriticalErrorOccurs;
    static const std::string PrintGameSignature;
    //@}

    /// @name Constants for parsing messages generated by SGFC
    //@{
    static const SgfcMessageType DefaultMessageType;
    static const bool DefaultIsCriticalMessage;
    static const std::string DefaultMessageText;
    static const std::string DefaultRawMessageText;
    //@}
  };
}
