#pragma once

// Project includes
#include "../include/ISgfcMessage.h"
#include "SgfcBackendDataWrapper.h"

// C++ Standard Library includes
#include <memory>
#include <vector>

namespace LibSgfcPlusPlus
{
  /// @brief The SgfcBackendLoadResult class provides provides access to the
  /// result of a load operation performed by SgfcBackendController.
  class SgfcBackendLoadResult
  {
  public:
    /// @brief Initializes a newly constructed SgfcBackendLoadResult object
    /// with the specified results.
    SgfcBackendLoadResult(
      std::vector<std::shared_ptr<ISgfcMessage>> parseResult,
      std::shared_ptr<SgfcBackendDataWrapper> sgfDataWrapper);
    virtual ~SgfcBackendLoadResult();

    /// @brief Returns a collection of ISgfcMessage objects which together form
    /// the parse result of the load operation. The messages appear in the order
    /// in which they were generated by SGFC.
    std::vector<std::shared_ptr<ISgfcMessage>> GetParseResult() const;

    /// @brief Returns a pointer to the SGF data that was generated by SGFC.
    std::shared_ptr<SgfcBackendDataWrapper> GetSgfDataWrapper() const;

  private:
    std::vector<std::shared_ptr<ISgfcMessage>> parseResult;
    std::shared_ptr<SgfcBackendDataWrapper> sgfDataWrapper;
  };
}
