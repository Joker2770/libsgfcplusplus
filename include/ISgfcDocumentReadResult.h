// -----------------------------------------------------------------------------
// Copyright 2020 Patrick NÃ¤f (herzbube@herzbube.ch)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// -----------------------------------------------------------------------------

#pragma once

// Project includes
#include "ISgfcDocument.h"
#include "ISgfcMessage.h"
#include "SgfcExitCode.h"

// Project includes (generated)
#include "SgfcPlusPlusExport.h"

// C++ Standard Library includes
#include <memory>
#include <vector>

namespace LibSgfcPlusPlus
{
  /// @brief The ISgfcDocumentReadResult interface provides access to the result
  /// of a read operation performed by ISgfcDocumentReader.
  ///
  /// @ingroup public-api
  /// @ingroup sgfc-frontend
  /// @ingroup document
  ///
  /// ISgfcDocumentReadResult is immutable, i.e. once the
  /// ISgfcDocumentReadResult object is constructed it cannot be changed.
  class SGFCPLUSPLUS_EXPORT ISgfcDocumentReadResult
  {
  public:
    /// @brief Initializes a newly constructed ISgfcDocumentReadResult object.
    ISgfcDocumentReadResult();

    /// @brief Destroys and cleans up the ISgfcDocumentReadResult object.
    virtual ~ISgfcDocumentReadResult();

    /// @brief Returns an SgfcExitCode value that best fits the result of the
    /// read operation. The numeric value of the SgfcExitCode corresponds to
    /// one of the exit codes of SGFC.
    virtual SgfcExitCode GetExitCode() const = 0;

    /// @brief Returns true if the SGF data that was loaded and parsed by the
    /// read operation is valid. Returns false if the SGF data is not valid.
    ///
    /// The SGF data is considered valid if the read operation did not
    /// generate a fatal error. A fatal error shows up in the collection of
    /// ISgfcMessage objects that GetParseResult() returns, as an ISgfcMessage
    /// object with message type #SgfcMessageType::FatalError.
    ///
    /// Typical fatal errors are invalid arguments, or the SGF data could not
    /// be read e.g. because the specified SGF file does not exist.
    ///
    /// @todo The SGF data should probably also be considered invalid if
    /// there were critical errors.
    virtual bool IsSgfDataValid() const = 0;

    /// @brief Returns a collection of ISgfcMessage objects which together form
    /// the parse result of the read operation. The messages appear in the order
    /// in which they were generated by SGFC. The collection is empty if the
    /// read operation did not generate any messages.
    virtual std::vector<std::shared_ptr<ISgfcMessage>> GetParseResult() const = 0;

    /// @brief Returns the document object that provides access to the SGF data
    /// in structured form. If IsSgfDataValid() returns false the document
    /// object that is returned contains no data.
    virtual std::shared_ptr<ISgfcDocument> GetDocument() const = 0;

    /// @brief Prints the content of the ISgfcDocumentReadResult to stdout for
    /// debugging purposes.
    ///
    /// @todo Remove this prior to release.
    virtual void DebugPrintToConsole() const = 0;
  };
}
